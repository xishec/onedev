# This workflow will build a docker container, publish it to Google Container Registry, and deploy it to GKE when a release is created
#
# To configure this workflow:
#
# 1. Ensure that your repository contains the necessary configuration for your Google Kubernetes Engine cluster, including deployment.yml, kustomization.yml, service.yml, etc.
#
# 2. Set up secrets in your workspace: GKE_PROJECT with the name of the project and GKE_SA_KEY with the Base64 encoded JSON service account key (https://github.com/GoogleCloudPlatform/github-actions/tree/docs/service-account-key/setup-gcloud#inputs).
#
# 3. Change the values for the GKE_ZONE, GKE_CLUSTER, IMAGE, and DEPLOYMENT_NAME environment variables (below).
#
# For more support on how to run the workflow, please visit https://github.com/google-github-actions/setup-gcloud/tree/master/example-workflows/gke

name: Test and Deploy

on:
  push:
    branches:
      - main
      
env:
  PROJECT_ID: onedev-303821
  GKE_CLUSTER: onedev-cluster    # TODO: update to cluster name
  GKE_ZONE: us-west1-a   # TODO: update to cluster zone
  DEPLOYMENT_NAME: gke-test # TODO: update to deployment name
  IMAGE: static-site

jobs:
  
  test:
    name: Test with Maven
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: Test with Maven
      run: mvn test
  
  deploy:
#     needs: test
    name: Setup gcloud CLI, Build, Publish, and Deploy
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    # Setup gcloud CLI
    - uses: google-github-actions/setup-gcloud@v0.2.0
      with:
        service_account_key: ewogICJ0eXBlIjogInNlcnZpY2VfYWNjb3VudCIsCiAgInByb2plY3RfaWQiOiAib25lZGV2LTMw MzgyMSIsCiAgInByaXZhdGVfa2V5X2lkIjogIjRmOWU4MzVkMWY2Zjg3N2QxMWRhY2VlZjc0MDky ZWNjY2JhOWJiNGUiLAogICJwcml2YXRlX2tleSI6 ICItLS0tLUJFR0lOIFBSSVZBVEUgS0VZLS0t LS1cbk1JSUV2Z0lCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQktnd2dnU2tBZ0VBQW9JQkFRRGFO VzFKcERjVGN1eFRcbjgvQjhTQU5lS0pGY3EzS2RoUDhndHZBREgvU1NacVNYV1ozTHdocGZOWThM elB GRXFTdWVQY3dyMDVRR001UmxcbnpLNDR1Y09iS0ZJelJBRTg0S3FKUnAwUUhTV1pJM1N2RVdy TFp4elphVkw4b1cvSTNiYUttWVNpamtKdG9Md2VcbkpvSW5oYVFpZm9FOTVTZEY3dFprVlJYWlhj WTAxOFkwakRJenptcFRjdUFRM3pZSGdBLzB6ZFF2TTN sL3FrajdcblcvdzhPZ0NDcktCOVVwLzdD QmgzVGNPV3dKcThnYVAzbFpPUXcwNGRnekh2MHdVelVLNHBNb2NsU2tITFNoR0Rcbmw3ZWh6L29T OVlrYWlxNEppTU9NekhQK2xFL0RlZ0ZKV2pNbitoU1I1RFY3eSs2ZUtLNlJTSW9ReU4vZTNkdUtc bjdFaS 9aQ2dqQWdNQkFBRUNnZ0VBT3d5d09YaDE2dzV6ZzdpRXdLMGdOQy9ZUG5LcS9wT0tFd2xP WkJvV3JqT1dcbm9OcUFpQzVMd3E0VXVzWElHS09MQ1RTQjl1NDNwWUg1eTU2Ykd3Q3lQVitvOXZT VlBTc3pHeGovMGVlQlVESzNcbkZkVXB5RWRzR0MyWFpvUX RZdmNVdWVjWGJJSUEyZmZnVUd4dFZs S2sreXl1dnRndlM0NTVlQWRLZFZzYUV4dzlcbklySzNyVUIrL2ZsSXBCd0kzbWYwdnROZzFNMjRi ZlpUOUZhY1hBTzVGbng0dkwya3pBZGRRQ3BhWHJmZ0JGaUtcbkYzKzE4YmJHTmlDbXdXUVlSRUdJ TjFoeXJiU 1dITkVrcUlMcHBvLzI1dWJxcFJuMWRnQTVVSSt2NThiU1NhSzZcbmdoVmtaNjNBaCti Sm5UNkwwSDVRZ0lhcWxaeU1oei82Wm5kSCtyelErUUtCZ1FEMTZmRHJBTEY2cHN3UXNoN1RcbnhO bWx2N0wxbkg0U25wSVBzR3dwRlJpQ2V2Sm1uUDhITk9Ka0hvM WxHRkVKU1V0TFNqcEozU0lZcFRv QUdOeHVcbjhDTmdQdDBwcnU1NUI4TnJjTmJYZlNScGhiQVI3cmtFdHl0Si93Ym9TVndUWnBlVmFj TGV2QVJKdlRaQnJMWWtcblhtMHljNjZLUEs2YW43YzR2SnBZbi9tRFhRS0JnUURqS0pZRXVtaEVn Q1UweExrZm05 djNMaUdXSnNING5lN3Rcblh1OXBHelRnYmNJdEovMVFCeFk1OWh3MXFERWtTcGx2 UFBUSHpDRW96K0M3Y2dYM0Eydnh2S2NCOGFSSzR4ZE9cbmlCWEs4am54TWI1S2NBc1RIVTYvTUtj MkxPYm8yZTZzcFE5S0w3eDBXM2RwRnphU0NoNngzM1VsVnlPaStX eUJcblQ1b21CWkVoZndLQmdH Q1JwZElqUzQ3bXdXd3RCbjRTNTRWM2FrZVpWTWpyREdDczMweWl4Q1U1TXNlcEQxMDlcbkgwcEIx VFRGLzh5dHc2dWxVbzUvRUV5dFZjR0VBY3h1OFBWeXVsY01Jd25VU3FGK2hsL0kvT3VUWERrdWpl bVVcbkpLUENTbXd kb3RMYmp0dFYxUGl5ek54SU9XNUE3S1lManNZcE4zbUJxdTk5bU8zbTRwVzYv TGpoQW9HQkFNVTFcbk53aGp6S0dybnFGeEtFYUl5UzZPbmhuOUMra0xNNkpnQ1BqMjViRHhtT0li Rlkra2wyYzZnc01TZ1pkQUxIU21cbk50dytHNHVTN1VmT2RkODgyVG5 FemppaDBFQXpac2lHM0dT VVpqay9OalRwa0xQSGZkWCtKeXloVHRaWVhSMEZcbkw0RDRjR09VQk5iM2tDaTVJR3pMMHFmWVB0 ZitNblVRNW9LYjBxT0JBb0dCQU5lWkJGTWVndVFGRFBXbnQwTzlcbmlwNHZLQk0vbG02QzlRaUdj VW5KS2EvSWJtZnM2aG RpYTdRYlRNVXRZbXVGTFVMZldYRXhpWGdpNUsraGRldzRcbjR1MTZPRENJ dWQ5d2Y1MHZYeDh1eW9JVmhNbEU3QnlSclg0dzhuQVgrMi9nRDVBYXFIODgvcG1DTjYrOUIrbkdc bjNqYTV4MVdDQWhueExGcHFVdW80eHk1ZFxuLS0tLS1FTkQgUFJJVkFURS BLRVktLS0tLVxuIiwK ICAiY2xpZW50X2VtYWlsIjogImdpdGh1YmRlcGxveUBvbmVkZXYtMzAzODIxLmlhbS5nc2Vydmlj ZWFjY291bnQuY29tIiwKICAiY2xpZW50X2lkIjogIjEwMjg4OTczOTA4NDUyMzYyMDE0MSIsCiAg ImF1dGhfdXJpIjogImh0d HBzOi8vYWNjb3VudHMuZ29vZ2xlLmNvbS9vL29hdXRoMi9hdXRoIiwK ICAidG9rZW5fdXJpIjogImh0dHBzOi8vb2F1dGgyLmdvb2dsZWFwaXMuY29tL3Rva2VuIiwKICAi YXV0aF9wcm92aWRlcl94NTA5X2NlcnRfdXJsIjogImh0dHBzOi8vd3d3Lmdvb 2dsZWFwaXMuY29t L29hdXRoMi92MS9jZXJ0cyIsCiAgImNsaWVudF94NTA5X2NlcnRfdXJsIjogImh0dHBzOi8vd3d3 Lmdvb2dsZWFwaXMuY29tL3JvYm90L3YxL21ldGFkYXRhL3g1MDkvZ2l0aHViZGVwbG95JTQwb25l ZGV2LTMwMzgyMS5pYW0uZ3Nl cnZpY2VhY2NvdW50LmNvbSIKfQo=
        project_id: onedev-303821

    # Configure Docker to use the gcloud command-line tool as a credential
    # helper for authentication
    - run: |-
        gcloud --quiet auth configure-docker

    # Get the GKE credentials so we can deploy to the cluster
    - uses: google-github-actions/get-gke-credentials@v0.2.1
      with:
        cluster_name: ${{ env.GKE_CLUSTER }}
        location: ${{ env.GKE_ZONE }}
        credentials: ewogICJ0eXBlIjogInNlcnZpY2VfYWNjb3VudCIsCiAgInByb2plY3RfaWQiOiAib25lZGV2LTMw MzgyMSIsCiAgInByaXZhdGVfa2V5X2lkIjogIjRmOWU4MzVkMWY2Zjg3N2QxMWRhY2VlZjc0MDky ZWNjY2JhOWJiNGUiLAogICJwcml2YXRlX2tleSI6 ICItLS0tLUJFR0lOIFBSSVZBVEUgS0VZLS0t LS1cbk1JSUV2Z0lCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQktnd2dnU2tBZ0VBQW9JQkFRRGFO VzFKcERjVGN1eFRcbjgvQjhTQU5lS0pGY3EzS2RoUDhndHZBREgvU1NacVNYV1ozTHdocGZOWThM elB GRXFTdWVQY3dyMDVRR001UmxcbnpLNDR1Y09iS0ZJelJBRTg0S3FKUnAwUUhTV1pJM1N2RVdy TFp4elphVkw4b1cvSTNiYUttWVNpamtKdG9Md2VcbkpvSW5oYVFpZm9FOTVTZEY3dFprVlJYWlhj WTAxOFkwakRJenptcFRjdUFRM3pZSGdBLzB6ZFF2TTN sL3FrajdcblcvdzhPZ0NDcktCOVVwLzdD QmgzVGNPV3dKcThnYVAzbFpPUXcwNGRnekh2MHdVelVLNHBNb2NsU2tITFNoR0Rcbmw3ZWh6L29T OVlrYWlxNEppTU9NekhQK2xFL0RlZ0ZKV2pNbitoU1I1RFY3eSs2ZUtLNlJTSW9ReU4vZTNkdUtc bjdFaS 9aQ2dqQWdNQkFBRUNnZ0VBT3d5d09YaDE2dzV6ZzdpRXdLMGdOQy9ZUG5LcS9wT0tFd2xP WkJvV3JqT1dcbm9OcUFpQzVMd3E0VXVzWElHS09MQ1RTQjl1NDNwWUg1eTU2Ykd3Q3lQVitvOXZT VlBTc3pHeGovMGVlQlVESzNcbkZkVXB5RWRzR0MyWFpvUX RZdmNVdWVjWGJJSUEyZmZnVUd4dFZs S2sreXl1dnRndlM0NTVlQWRLZFZzYUV4dzlcbklySzNyVUIrL2ZsSXBCd0kzbWYwdnROZzFNMjRi ZlpUOUZhY1hBTzVGbng0dkwya3pBZGRRQ3BhWHJmZ0JGaUtcbkYzKzE4YmJHTmlDbXdXUVlSRUdJ TjFoeXJiU 1dITkVrcUlMcHBvLzI1dWJxcFJuMWRnQTVVSSt2NThiU1NhSzZcbmdoVmtaNjNBaCti Sm5UNkwwSDVRZ0lhcWxaeU1oei82Wm5kSCtyelErUUtCZ1FEMTZmRHJBTEY2cHN3UXNoN1RcbnhO bWx2N0wxbkg0U25wSVBzR3dwRlJpQ2V2Sm1uUDhITk9Ka0hvM WxHRkVKU1V0TFNqcEozU0lZcFRv QUdOeHVcbjhDTmdQdDBwcnU1NUI4TnJjTmJYZlNScGhiQVI3cmtFdHl0Si93Ym9TVndUWnBlVmFj TGV2QVJKdlRaQnJMWWtcblhtMHljNjZLUEs2YW43YzR2SnBZbi9tRFhRS0JnUURqS0pZRXVtaEVn Q1UweExrZm05 djNMaUdXSnNING5lN3Rcblh1OXBHelRnYmNJdEovMVFCeFk1OWh3MXFERWtTcGx2 UFBUSHpDRW96K0M3Y2dYM0Eydnh2S2NCOGFSSzR4ZE9cbmlCWEs4am54TWI1S2NBc1RIVTYvTUtj MkxPYm8yZTZzcFE5S0w3eDBXM2RwRnphU0NoNngzM1VsVnlPaStX eUJcblQ1b21CWkVoZndLQmdH Q1JwZElqUzQ3bXdXd3RCbjRTNTRWM2FrZVpWTWpyREdDczMweWl4Q1U1TXNlcEQxMDlcbkgwcEIx VFRGLzh5dHc2dWxVbzUvRUV5dFZjR0VBY3h1OFBWeXVsY01Jd25VU3FGK2hsL0kvT3VUWERrdWpl bVVcbkpLUENTbXd kb3RMYmp0dFYxUGl5ek54SU9XNUE3S1lManNZcE4zbUJxdTk5bU8zbTRwVzYv TGpoQW9HQkFNVTFcbk53aGp6S0dybnFGeEtFYUl5UzZPbmhuOUMra0xNNkpnQ1BqMjViRHhtT0li Rlkra2wyYzZnc01TZ1pkQUxIU21cbk50dytHNHVTN1VmT2RkODgyVG5 FemppaDBFQXpac2lHM0dT VVpqay9OalRwa0xQSGZkWCtKeXloVHRaWVhSMEZcbkw0RDRjR09VQk5iM2tDaTVJR3pMMHFmWVB0 ZitNblVRNW9LYjBxT0JBb0dCQU5lWkJGTWVndVFGRFBXbnQwTzlcbmlwNHZLQk0vbG02QzlRaUdj VW5KS2EvSWJtZnM2aG RpYTdRYlRNVXRZbXVGTFVMZldYRXhpWGdpNUsraGRldzRcbjR1MTZPRENJ dWQ5d2Y1MHZYeDh1eW9JVmhNbEU3QnlSclg0dzhuQVgrMi9nRDVBYXFIODgvcG1DTjYrOUIrbkdc bjNqYTV4MVdDQWhueExGcHFVdW80eHk1ZFxuLS0tLS1FTkQgUFJJVkFURS BLRVktLS0tLVxuIiwK ICAiY2xpZW50X2VtYWlsIjogImdpdGh1YmRlcGxveUBvbmVkZXYtMzAzODIxLmlhbS5nc2Vydmlj ZWFjY291bnQuY29tIiwKICAiY2xpZW50X2lkIjogIjEwMjg4OTczOTA4NDUyMzYyMDE0MSIsCiAg ImF1dGhfdXJpIjogImh0d HBzOi8vYWNjb3VudHMuZ29vZ2xlLmNvbS9vL29hdXRoMi9hdXRoIiwK ICAidG9rZW5fdXJpIjogImh0dHBzOi8vb2F1dGgyLmdvb2dsZWFwaXMuY29tL3Rva2VuIiwKICAi YXV0aF9wcm92aWRlcl94NTA5X2NlcnRfdXJsIjogImh0dHBzOi8vd3d3Lmdvb 2dsZWFwaXMuY29t L29hdXRoMi92MS9jZXJ0cyIsCiAgImNsaWVudF94NTA5X2NlcnRfdXJsIjogImh0dHBzOi8vd3d3 Lmdvb2dsZWFwaXMuY29tL3JvYm90L3YxL21ldGFkYXRhL3g1MDkvZ2l0aHViZGVwbG95JTQwb25l ZGV2LTMwMzgyMS5pYW0uZ3Nl cnZpY2VhY2NvdW50LmNvbSIKfQo=

    # Build the Docker image
    - name: Build
      run: |-
        docker build \
          --tag "gcr.io/$PROJECT_ID/$IMAGE:$GITHUB_SHA" \
          --build-arg GITHUB_SHA="$GITHUB_SHA" \
          --build-arg GITHUB_REF="$GITHUB_REF" \
          .

    # Push the Docker image to Google Container Registry
    - name: Publish
      run: |-
        docker push "gcr.io/$PROJECT_ID/$IMAGE:$GITHUB_SHA"

#     # Set up kustomize
#     - name: Set up Kustomize
#       run: |-
#         curl -sfLo kustomize https://github.com/kubernetes-sigs/kustomize/releases/download/v3.1.0/kustomize_3.1.0_linux_amd64
#         chmod u+x ./kustomize

    # Deploy the Docker image to the GKE cluster
#     - name: Deploy
#       run: |-
#         ./kustomize edit set image gcr.io/PROJECT_ID/IMAGE:TAG=gcr.io/$PROJECT_ID/$IMAGE:$GITHUB_SHA
#         ./kustomize build . | kubectl apply -f -
#         kubectl rollout status deployment/$DEPLOYMENT_NAME
#         kubectl get services -o wide
    - name: Deploy
      run: kubectl set image deployment/onedev onedev=gcr.io/$PROJECT_ID/$IMAGE:$GITHUB_SHA
