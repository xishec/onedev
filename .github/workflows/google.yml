# This workflow will build a docker container, publish it to Google Container Registry, and deploy it to GKE when a release is created
#
# To configure this workflow:
#
# 1. Ensure that your repository contains the necessary configuration for your Google Kubernetes Engine cluster, including deployment.yml, kustomization.yml, service.yml, etc.
#
# 2. Set up secrets in your workspace: GKE_PROJECT with the name of the project and GKE_SA_KEY with the Base64 encoded JSON service account key (https://github.com/GoogleCloudPlatform/github-actions/tree/docs/service-account-key/setup-gcloud#inputs).
#
# 3. Change the values for the GKE_ZONE, GKE_CLUSTER, IMAGE, and DEPLOYMENT_NAME environment variables (below).
#
# For more support on how to run the workflow, please visit https://github.com/google-github-actions/setup-gcloud/tree/master/example-workflows/gke

name: Test, Build Docker and Deploy to GKE

on:
  release:
    types: [created]

env:
  PROJECT_ID: onedev-303821
  GKE_CLUSTER: onedev-cluster    # TODO: update to cluster name
  GKE_ZONE: us-central1-a   # TODO: update to cluster zone
  DEPLOYMENT_NAME: gke-test # TODO: update to deployment name
  IMAGE: static-site

jobs:
  
  test:
    name: Test with Maven
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: Test with Maven
      run: mvn test
  
  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    # Setup gcloud CLI
    - uses: google-github-actions/setup-gcloud@v0.2.0
      with:
        service_account_key: ewogICJ0eXBlIjogInNlcnZpY2VfYWNjb3VudCIsCiAgInByb2plY3RfaWQiOiAib25lZGV2LTMw MzgyMSIsCiAgInByaXZhdGVfa2V5X2lkIjogImEyZmJlMjY5ZTA3NTU2ZWE1Yzk3ODJiNWY0NTAy ZDgyMGExMmFhZTciLAogICJwcml2YXRlX2tleSI6 ICItLS0tLUJFR0lOIFBSSVZBVEUgS0VZLS0t LS1cbk1JSUV2UUlCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQktjd2dnU2pBZ0VBQW9JQkFRQzB5 aGJIMytYdVUzaTNcbkU0VTROMmdjcXZoanpnY0JldlFJaTF5Vks0TVBWbDA4VmF0N2pBM28yWEtL OGp pZk9WVnNpa2ErYzRtNnJlazNcbkJYS0dTRXVSSHU5bkk1cFRoTzQ2a0YyYmlra1ViQnpkaXJX MUI2cm95UzlYREUzbFpQR0lWUlFpYUJPNlk2aGpcbk1JVzZKanhKMVNqa09sM3JmVFVTaVNzZzh1 TFd6TlNDMm9MalZMK1QvUVJNeFdYMXNSSm14clZQU28 5K0N4M3VcbjBzWUJ0ZWhka25Bb25hSTky UjFXVHlmaU9RWWNMS0V2TlJKc1JlVzZQMUNNcEh4aklqMzVKQTJTSGFvYnJHbWdcblhzeG1naCtT aVczSmR1NWYrc2V5RzNzd1VscUlHVWdXRDRQNVBXWkRjR0dtcHhtRTYyODg4OHg0YTlNbnRJczJc bi92ND JWenhCQWdNQkFBRUNnZ0VBQk1nVGg0QjBlYlBiZUNiR3J6dEg2dm92OTU1MkJrNnFNRStw OHpLNHYxUnVcbnd0bkJOS2lrOVlqMWJwZFpjckgyMWNLOUp1eGNzdGljQW5NeWJ1VnY3NHY4azZN WUZ5Z1NPa1QzTk5YdUk0d2pcbklmamo0QlhaS2dSUzF0L2 h4TjlyN3A4bXc5ZUhnMkVxRGFBMWsr Yk8vQStYTlVkclB5bmdtQ0k5OGNaNnhCT1Fcbm1id1phb1psSEJVYXMybFA2RGJIRGZLTUlNUENm dVFMZDBaVElhcUY1dDk5NDl1S094UFhjRHVEZWl4Q1NwYy9cbkEybXBQanZYOHJjQjVIWGk2OXBw dmZqd3NGc EhBSjNNd0U1bjdzK05lVzVzUDZEd0xpRlExalB4cXdnME1ySXdcbk04c21HYUdSMEE1 TkY2aHFYVUhnQTUrZHpGdW5SNHBmZlBSR3g3NEVBUUtCZ1FEOG5XSFh6ekFkT0tDeVB5cmJcbkM5 MElRTzMyMWxhaHYvUFdsTitTWEc2RDNMbG91RHFxam5OR1p1M klZaUtQdzhsWU9YbXd6OHhzbDRT dXZEUm9cbkgxbmRIRVR2TDBqbEtQdHExZnlvSlZXb2JOelo2cE81elM3ZUVUVzlpcVJPVHRBeCty VjZMMFdGTncwZVE0TmtcbkZYSTZScGNNMzYwRDFGK2o5TlVSWjRkYWFRS0JnUUMzTmsycTQxV0dh L2dSeDdHdTYv M2xOMVZKWjZQajVoVy9cbnhabHhleGNEYVRWRjliQnhsbm55c0xlNHA0TGwrVDVy bnBla0w4ODAwY0JBejBuM3BxTlJjaU1PMWNvN0VYMWxcbmVHUVRWaCtma1dmL1NOcVJxS0dIb2NS SWJxaWx5aEM3YlN1dHRlNVAzM2p6dk9rZTc2S1I0cmw4Y3gyVldp MUVcbnN3a1QvaWNvR1FLQmdE ZGd6UlZCWDF2WWtTbmlQU1BkK3V1WFNGT0hjMkJzTXlsRVk2cXpScXJ6bFZYR3BWM0VcbmNyTHBW NE5CZURBcURKYWhxdksrNnlLWEtNZ2hqQitUVitEb0ZKaVd0aFUrb2JjdkIvOVloK212Uzg4ZDVK cWpcbngzVjVNbDN GNmZVY3cvbGc2NjNJZFNZYUJtOHUvN3ZPRThlQXVCWmpab3RqWUVBU0tTOXlr YktaQW9HQUZkcFRcblQwUElhcjBzSEtyT0JjZytRMzNqSFZ0UVVCbWNsSUEwT2pYdFc4bkx3ZWw1 UDBNc2pvY0hrdTNnRGlBNWtzcWFcbjJjbWVGSFhFVWJhbjR2TXNYY1d ZYXVlVE5KSjBlNHJ0bk9U VDVzdUlOUW55a0JjbUZUQjFZaEpZNlZWOXcyMVZcbkhXWXE0N29MQ2orSkt0aDRjcUF4Y2FlbGFy QVQ0RExlclZUT1JOa0NnWUVBb1l5NU1Ubnl0dzZwNTJOS3NiV2Zcbit0Si93Q3B5U0xkNSsySkxT b0Q2OWVFZzBPUWRWR2 9RcWJwdkFvWUN6MlhyN01wZmVWbVM3VTlsUW5XNkNPYmNcbk1TS0NzY2N4 RCt1ZTUzYnBZcDAzS1hWZmIzVGFheklrV0ZiUnJ0UktlMXpoSnM5L2JQM1IzQjlKYnhBa296dnZc bnM3K1VPZUZkc1oyay9QdlJKaWpJNGRvPVxuLS0tLS1FTkQgUFJJVkFURS BLRVktLS0tLVxuIiwK ICAiY2xpZW50X2VtYWlsIjogImdpdGh1YmRlcGxveUBvbmVkZXYtMzAzODIxLmlhbS5nc2Vydmlj ZWFjY291bnQuY29tIiwKICAiY2xpZW50X2lkIjogIjEwMjg4OTczOTA4NDUyMzYyMDE0MSIsCiAg ImF1dGhfdXJpIjogImh0d HBzOi8vYWNjb3VudHMuZ29vZ2xlLmNvbS9vL29hdXRoMi9hdXRoIiwK ICAidG9rZW5fdXJpIjogImh0dHBzOi8vb2F1dGgyLmdvb2dsZWFwaXMuY29tL3Rva2VuIiwKICAi YXV0aF9wcm92aWRlcl94NTA5X2NlcnRfdXJsIjogImh0dHBzOi8vd3d3Lmdvb 2dsZWFwaXMuY29t L29hdXRoMi92MS9jZXJ0cyIsCiAgImNsaWVudF94NTA5X2NlcnRfdXJsIjogImh0dHBzOi8vd3d3 Lmdvb2dsZWFwaXMuY29tL3JvYm90L3YxL21ldGFkYXRhL3g1MDkvZ2l0aHViZGVwbG95JTQwb25l ZGV2LTMwMzgyMS5pYW0uZ3Nl cnZpY2VhY2NvdW50LmNvbSIKfQo=
        project_id: onedev-303821

    # Configure Docker to use the gcloud command-line tool as a credential
    # helper for authentication
    - run: |-
        gcloud --quiet auth configure-docker

    # Get the GKE credentials so we can deploy to the cluster
    - uses: google-github-actions/get-gke-credentials@v0.2.1
      with:
        cluster_name: ${{ env.GKE_CLUSTER }}
        location: ${{ env.GKE_ZONE }}
        credentials: ewogICJ0eXBlIjogInNlcnZpY2VfYWNjb3VudCIsCiAgInByb2plY3RfaWQiOiAib25lZGV2LTMw MzgyMSIsCiAgInByaXZhdGVfa2V5X2lkIjogImEyZmJlMjY5ZTA3NTU2ZWE1Yzk3ODJiNWY0NTAy ZDgyMGExMmFhZTciLAogICJwcml2YXRlX2tleSI6 ICItLS0tLUJFR0lOIFBSSVZBVEUgS0VZLS0t LS1cbk1JSUV2UUlCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQktjd2dnU2pBZ0VBQW9JQkFRQzB5 aGJIMytYdVUzaTNcbkU0VTROMmdjcXZoanpnY0JldlFJaTF5Vks0TVBWbDA4VmF0N2pBM28yWEtL OGp pZk9WVnNpa2ErYzRtNnJlazNcbkJYS0dTRXVSSHU5bkk1cFRoTzQ2a0YyYmlra1ViQnpkaXJX MUI2cm95UzlYREUzbFpQR0lWUlFpYUJPNlk2aGpcbk1JVzZKanhKMVNqa09sM3JmVFVTaVNzZzh1 TFd6TlNDMm9MalZMK1QvUVJNeFdYMXNSSm14clZQU28 5K0N4M3VcbjBzWUJ0ZWhka25Bb25hSTky UjFXVHlmaU9RWWNMS0V2TlJKc1JlVzZQMUNNcEh4aklqMzVKQTJTSGFvYnJHbWdcblhzeG1naCtT aVczSmR1NWYrc2V5RzNzd1VscUlHVWdXRDRQNVBXWkRjR0dtcHhtRTYyODg4OHg0YTlNbnRJczJc bi92ND JWenhCQWdNQkFBRUNnZ0VBQk1nVGg0QjBlYlBiZUNiR3J6dEg2dm92OTU1MkJrNnFNRStw OHpLNHYxUnVcbnd0bkJOS2lrOVlqMWJwZFpjckgyMWNLOUp1eGNzdGljQW5NeWJ1VnY3NHY4azZN WUZ5Z1NPa1QzTk5YdUk0d2pcbklmamo0QlhaS2dSUzF0L2 h4TjlyN3A4bXc5ZUhnMkVxRGFBMWsr Yk8vQStYTlVkclB5bmdtQ0k5OGNaNnhCT1Fcbm1id1phb1psSEJVYXMybFA2RGJIRGZLTUlNUENm dVFMZDBaVElhcUY1dDk5NDl1S094UFhjRHVEZWl4Q1NwYy9cbkEybXBQanZYOHJjQjVIWGk2OXBw dmZqd3NGc EhBSjNNd0U1bjdzK05lVzVzUDZEd0xpRlExalB4cXdnME1ySXdcbk04c21HYUdSMEE1 TkY2aHFYVUhnQTUrZHpGdW5SNHBmZlBSR3g3NEVBUUtCZ1FEOG5XSFh6ekFkT0tDeVB5cmJcbkM5 MElRTzMyMWxhaHYvUFdsTitTWEc2RDNMbG91RHFxam5OR1p1M klZaUtQdzhsWU9YbXd6OHhzbDRT dXZEUm9cbkgxbmRIRVR2TDBqbEtQdHExZnlvSlZXb2JOelo2cE81elM3ZUVUVzlpcVJPVHRBeCty VjZMMFdGTncwZVE0TmtcbkZYSTZScGNNMzYwRDFGK2o5TlVSWjRkYWFRS0JnUUMzTmsycTQxV0dh L2dSeDdHdTYv M2xOMVZKWjZQajVoVy9cbnhabHhleGNEYVRWRjliQnhsbm55c0xlNHA0TGwrVDVy bnBla0w4ODAwY0JBejBuM3BxTlJjaU1PMWNvN0VYMWxcbmVHUVRWaCtma1dmL1NOcVJxS0dIb2NS SWJxaWx5aEM3YlN1dHRlNVAzM2p6dk9rZTc2S1I0cmw4Y3gyVldp MUVcbnN3a1QvaWNvR1FLQmdE ZGd6UlZCWDF2WWtTbmlQU1BkK3V1WFNGT0hjMkJzTXlsRVk2cXpScXJ6bFZYR3BWM0VcbmNyTHBW NE5CZURBcURKYWhxdksrNnlLWEtNZ2hqQitUVitEb0ZKaVd0aFUrb2JjdkIvOVloK212Uzg4ZDVK cWpcbngzVjVNbDN GNmZVY3cvbGc2NjNJZFNZYUJtOHUvN3ZPRThlQXVCWmpab3RqWUVBU0tTOXlr YktaQW9HQUZkcFRcblQwUElhcjBzSEtyT0JjZytRMzNqSFZ0UVVCbWNsSUEwT2pYdFc4bkx3ZWw1 UDBNc2pvY0hrdTNnRGlBNWtzcWFcbjJjbWVGSFhFVWJhbjR2TXNYY1d ZYXVlVE5KSjBlNHJ0bk9U VDVzdUlOUW55a0JjbUZUQjFZaEpZNlZWOXcyMVZcbkhXWXE0N29MQ2orSkt0aDRjcUF4Y2FlbGFy QVQ0RExlclZUT1JOa0NnWUVBb1l5NU1Ubnl0dzZwNTJOS3NiV2Zcbit0Si93Q3B5U0xkNSsySkxT b0Q2OWVFZzBPUWRWR2 9RcWJwdkFvWUN6MlhyN01wZmVWbVM3VTlsUW5XNkNPYmNcbk1TS0NzY2N4 RCt1ZTUzYnBZcDAzS1hWZmIzVGFheklrV0ZiUnJ0UktlMXpoSnM5L2JQM1IzQjlKYnhBa296dnZc bnM3K1VPZUZkc1oyay9QdlJKaWpJNGRvPVxuLS0tLS1FTkQgUFJJVkFURS BLRVktLS0tLVxuIiwK ICAiY2xpZW50X2VtYWlsIjogImdpdGh1YmRlcGxveUBvbmVkZXYtMzAzODIxLmlhbS5nc2Vydmlj ZWFjY291bnQuY29tIiwKICAiY2xpZW50X2lkIjogIjEwMjg4OTczOTA4NDUyMzYyMDE0MSIsCiAg ImF1dGhfdXJpIjogImh0d HBzOi8vYWNjb3VudHMuZ29vZ2xlLmNvbS9vL29hdXRoMi9hdXRoIiwK ICAidG9rZW5fdXJpIjogImh0dHBzOi8vb2F1dGgyLmdvb2dsZWFwaXMuY29tL3Rva2VuIiwKICAi YXV0aF9wcm92aWRlcl94NTA5X2NlcnRfdXJsIjogImh0dHBzOi8vd3d3Lmdvb 2dsZWFwaXMuY29t L29hdXRoMi92MS9jZXJ0cyIsCiAgImNsaWVudF94NTA5X2NlcnRfdXJsIjogImh0dHBzOi8vd3d3 Lmdvb2dsZWFwaXMuY29tL3JvYm90L3YxL21ldGFkYXRhL3g1MDkvZ2l0aHViZGVwbG95JTQwb25l ZGV2LTMwMzgyMS5pYW0uZ3Nl cnZpY2VhY2NvdW50LmNvbSIKfQo=

    # Build the Docker image
    - name: Build
      run: |-
        docker build \
          --tag "gcr.io/$PROJECT_ID/$IMAGE:$GITHUB_SHA" \
          --build-arg GITHUB_SHA="$GITHUB_SHA" \
          --build-arg GITHUB_REF="$GITHUB_REF" \
          .

    # Push the Docker image to Google Container Registry
    - name: Publish
      run: |-
        docker push "gcr.io/$PROJECT_ID/$IMAGE:$GITHUB_SHA"

#     # Set up kustomize
#     - name: Set up Kustomize
#       run: |-
#         curl -sfLo kustomize https://github.com/kubernetes-sigs/kustomize/releases/download/v3.1.0/kustomize_3.1.0_linux_amd64
#         chmod u+x ./kustomize

    # Deploy the Docker image to the GKE cluster
#     - name: Deploy
#       run: |-
#         ./kustomize edit set image gcr.io/PROJECT_ID/IMAGE:TAG=gcr.io/$PROJECT_ID/$IMAGE:$GITHUB_SHA
#         ./kustomize build . | kubectl apply -f -
#         kubectl rollout status deployment/$DEPLOYMENT_NAME
#         kubectl get services -o wide
    - name: Deploy
      run: kubectl set image deployment/onedev onedev=gcr.io/$PROJECT_ID/$IMAGE:$GITHUB_SHA
